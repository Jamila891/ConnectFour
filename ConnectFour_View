import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.layout.Region;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.scene.text.TextAlignment;
import javafx.stage.Stage;

public class ConnectFour_View {
	
	protected ConnectFour_Model model;
	protected Stage primaryStage;
	public final int COLUMNS = 7;
    public final int ROWS = 6;

    protected Circle[][] selectedStones = new Circle[COLUMNS][ROWS];
    protected Text currentPlayerLabel;
    protected Button restartGameButton;
    protected Circle circle;
    protected VBox vbox;
	
	public ConnectFour_View(Stage primaryStage, ConnectFour_Model model) {
		this.primaryStage = primaryStage;
		this.model = model;
		
        primaryStage.setTitle("Connect Four");

        BorderPane root = new BorderPane();
        HBox header = new HBox();
        header.setPadding(new Insets(15, 15, 15, 15));
        header.setSpacing(10);

        currentPlayerLabel = new Text();
        header.getChildren().add(currentPlayerLabel);
        currentPlayerLabel.setTextAlignment(TextAlignment.RIGHT);
        currentPlayerLabel.setFont(Font.font("Verdana", FontWeight.BOLD, 18));
        currentPlayerLabel.setFill(Color.BLACK);

        Region spacing = new Region();
        HBox.setHgrow(spacing, Priority.ALWAYS);
        header.getChildren().add(spacing);

        restartGameButton = new Button();
        restartGameButton.setText("New Game");
        
        header.getChildren().add(restartGameButton);
        restartGameButton.setAlignment(Pos.CENTER_RIGHT);

        root.setTop(header);

        HBox hbox = new HBox();
        hbox.setPadding(new Insets(0, 15, 0, 15));
        hbox.setSpacing(10);

        for (int i = 0; i < COLUMNS; ++i) {
            selectedStones[i] = new Circle[ROWS];
            vbox = new VBox();
            vbox.setPadding(new Insets(10));
            vbox.setSpacing(8);

            for (int j = 0; j < ROWS; ++j) {
                circle = new Circle();
                circle.setRadius(35);
                circle.setStyle("-fx-fill: #ffffff;-fx-stroke: #145399;-fx-stroke-width: 3;");
                vbox.getChildren().add(circle);
                selectedStones[i][j] = circle;
            }

            hbox.getChildren().add(vbox);
        }

        root.setCenter(hbox);

        Scene myScene = new Scene(root, 750, 570);

        primaryStage.setScene(myScene);
        primaryStage.setResizable(false);
	}
	
	public void start() {
		this.primaryStage.show();
	}
}
